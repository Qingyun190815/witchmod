package witchmod.cards;

import com.megacrit.cardcrawl.actions.common.ApplyPowerAction;
import com.megacrit.cardcrawl.actions.common.MakeTempCardInDrawPileAction;
import com.megacrit.cardcrawl.actions.common.SetDontTriggerAction;
import com.megacrit.cardcrawl.cards.AbstractCard;
import com.megacrit.cardcrawl.cards.CardQueueItem;
import com.megacrit.cardcrawl.characters.AbstractPlayer;
import com.megacrit.cardcrawl.dungeons.AbstractDungeon;
import com.megacrit.cardcrawl.monsters.AbstractMonster;

import basemod.abstracts.CustomCard;
import witchmod.WitchMod;
import witchmod.patches.AbstractCardEnum;

public class NighInvulnerability extends AbstractWitchCleansableCurse {
	public static final String ID = "NighInvulnerability";
	public static final	String NAME = "Nigh Invulnerability";
	public static final	String NAME_CLEANSED = "Nigh Invulnerability";
	public static final	String IMG = "cards/placeholder_skill.png";
	public static final	String DESCRIPTION = "Unplayable. NL Cleanse: have at least 15 block.";
	public static final	String DESCRIPTION_CLEANSED = "Reduce all damage to 1 for !M! turn.";
	private static final CardRarity RARITY = CardRarity.UNCOMMON;
	private static final CardTarget TARGET = CardTarget.SELF;
	private static final CardType TYPE = CardType.CURSE;
	
	private static final int POOL = 1;
	private static final int COST = 1;
	
	private static final int POWER = 1;


	
	public NighInvulnerability() {
		super(ID, NAME, IMG, DESCRIPTION, RARITY);
		this.magicNumber = this.baseMagicNumber = POWER;
	}
	
	@Override
	public void cleanse() {
		super.cleanse();
		type = TYPE;
		cost = COST;
		costForTurn = COST;
		isCostModified = false;
		target = TARGET;
		name = NAME_CLEANSED;
		rawDescription = DESCRIPTION_CLEANSED;
		initializeDescription();
	}

	
	
    @Override
    public void use(AbstractPlayer p, AbstractMonster m) {
        if (!this.dontTriggerOnUseCard && p.hasRelic("Blue Candle")) {
            this.useBlueCandle(p);
        } else {
            AbstractDungeon.actionManager.addToBottom(new ApplyPowerAction(p, p, new IntangiblePlayerPower(p,magicNumber),magicNumber));
        }
    }
    
	@Override
	protected boolean cleanseCheck() {
		if (AbstractDungeon.player.currentBlock >= 15) {
			return true;
		}
		return false;
	}
    
	
	public AbstractCard makeCopy() {
		return new NighInvulnerability();
	}
	
	public void upgrade() {

	}
}
